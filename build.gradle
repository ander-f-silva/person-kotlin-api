buildscript {
    ext {
        kotlinVersion = '1.2.71'
        springBootVersion = '2.0.4.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'jacoco'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'br.com.miraedu'
version = '0.0.1'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    jcenter()
}

jacoco {
    toolVersion = '0.8.2'
}

ext {
    aspenVersion = '2.1.0'
    restAssuredVersion = '3.3.0'
    fixtureVersion = '3.1.0'
    modelVersion = '2.3.0'
    foxVersion = '2.8.0'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.flywaydb:flyway-core'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.hibernate:hibernate-envers"
    implementation "org.modelmapper:modelmapper:${modelVersion}"
    implementation "io.springfox:springfox-swagger2:${foxVersion}"
    implementation "io.springfox:springfox-swagger-ui:${foxVersion}"

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'

    testImplementation "br.com.six2six:fixture-factory:${fixtureVersion}"
    testImplementation "io.rest-assured:rest-assured:${restAssuredVersion}"
    testImplementation "io.damo.aspen:aspen:${aspenVersion}"
    testImplementation "io.damo.aspen:aspen-spring:${aspenVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.05
            }
            excludes = [
                    'br.com.miraedu.persons.PersonsApplicationKt',
                    'br.com.miraedu.persons.dto.*',
                    'br.com.miraedu.persons.exception.*'
            ]
        }
        rule {
            element = 'CLASS'
            includes = [
                    'br.com.miraedu.persons.PersonsApplicationKt',
                    'br.com.miraedu.persons.dto.*',
                    'br.com.miraedu.persons.exception.*'
            ]
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.5
            }
        }
        rule {
            element = 'CLASS'
            includes = [
                    'br.com.miraedu.persons.PersonsApplicationKt',
                    'br.com.miraedu.persons.dto.*',
                    'br.com.miraedu.persons.exception.*'
            ]
            limit {
                counter = 'METHOD'
                value = 'COVEREDRATIO'
                minimum = 0.5
            }
        }
    }
}

build.finalizedBy jacocoTestReport